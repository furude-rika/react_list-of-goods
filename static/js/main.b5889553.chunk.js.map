{"version":3,"sources":["GoodList.jsx","App.js","index.js"],"names":["GoodList","goods","visibility","className","classNames","invisible","visible","map","good","key","goodsFromServer","removeSpaces","value","split","join","App","state","isVisible","showList","setState","reverseList","reverse","sortAlphabetically","sort","a","b","localeCompare","resetList","sortByLength","length","this","type","buttons__button","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACtB,wBACEC,UAAWC,IAAW,CACpB,aAAa,EACbC,WAAYH,EACZI,QAASJ,KAGVD,EAAMM,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EACLL,UAAU,aAETK,QCZHE,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGF,SAASC,EAAaC,GACpB,OAAOA,EAAMC,MAAM,KAAKC,KAAK,I,IA4HhBC,E,4MAxHbC,MAAQ,CACNf,MAAO,GACPgB,WAAW,G,EAGbC,SAAW,WACT,EAAKC,UAAS,iBAAO,CACnBlB,MAAM,GAAD,OAAMS,GACXO,WAAW,O,EAIfG,YAAc,WACZ,EAAKD,UAAS,SAAAH,GAAK,MAAK,CACtBf,MAAO,YAAIe,EAAMf,OAAOoB,e,EAI5BC,mBAAqB,WACnB,EAAKH,UAAS,SAAAH,GAAK,MAAK,CACtBf,MAAO,YAAIe,EAAMf,OAAOsB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI3DE,UAAY,WACV,EAAKR,SAAS,CACZlB,MAAM,GAAD,OAAMS,M,EAIfkB,aAAe,WACb,EAAKT,UAAS,SAAAH,GAAK,MAAK,CACtBf,MAAO,YAAIe,EAAMf,OACdsB,MAAK,SAACC,EAAGC,GAAJ,OAAUd,EAAaa,GAAGK,OAASlB,EAAac,GAAGI,e,uDAIrD,IACAZ,EAAca,KAAKd,MAAnBC,UAER,OACE,yBAAKd,UAAU,OACb,wBAAIA,UAAU,cAAd,SAEA,yBAAKA,UAAU,wBACb,4BACE4B,KAAK,SACL5B,UAAWC,IAAW,CACpB4B,iBAAiB,EACjB,0BAA0B,EAC1B3B,UAAWY,EACXX,SAAUW,IAEZgB,QAASH,KAAKZ,UARhB,SAaA,4BACEa,KAAK,SACL5B,UAAWC,IAAW,CACpB4B,iBAAiB,EACjB,0BAA0B,EAC1B3B,WAAYY,EACZX,QAASW,IAEXgB,QAASH,KAAKV,aARhB,WAaA,4BACEW,KAAK,SACL5B,UAAWC,IAAW,CACpB4B,iBAAiB,EACjB,2BAA2B,EAC3B3B,WAAYY,EACZX,QAASW,IAEXgB,QAASH,KAAKR,oBARhB,uBAaA,4BACES,KAAK,SACL5B,UAAWC,IAAW,CACpB4B,iBAAiB,EACjB,wBAAwB,EACxB3B,WAAYY,EACZX,QAASW,IAEXgB,QAASH,KAAKH,WARhB,SAaA,4BACEI,KAAK,SACL5B,UAAWC,IAAW,CACpB4B,iBAAiB,EACjB,4BAA4B,EAC5B3B,WAAYY,EACZX,QAASW,IAEXgB,QAASH,KAAKF,cARhB,mBAcF,kBAAC,EAAD,CACE3B,MAAO6B,KAAKd,MAAMf,MAClBC,WAAYe,S,GAlHJiB,IAAMC,WClBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b5889553.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const GoodList = ({ goods, visibility }) => (\n  <ul\n    className={classNames({\n      'good-list': true,\n      invisible: !visibility,\n      visible: visibility,\n    })}\n  >\n    {goods.map(good => (\n      <li\n        key={good}\n        className=\"good-item\"\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  visibility: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { GoodList } from './GoodList';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction removeSpaces(value) {\n  return value.split(' ').join('');\n}\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n    isVisible: false,\n  }\n\n  showList = () => {\n    this.setState(() => ({\n      goods: [...goodsFromServer],\n      isVisible: true,\n    }));\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  };\n\n  resetList = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n    });\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods]\n        .sort((a, b) => removeSpaces(a).length - removeSpaces(b).length),\n    }));\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n\n        <div className=\"App__buttons buttons\">\n          <button\n            type=\"button\"\n            className={classNames({\n              buttons__button: true,\n              'buttons__button--green': true,\n              invisible: isVisible,\n              visible: !isVisible,\n            })}\n            onClick={this.showList}\n          >\n            Start\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              buttons__button: true,\n              'buttons__button--green': true,\n              invisible: !isVisible,\n              visible: isVisible,\n            })}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              buttons__button: true,\n              'buttons__button--yellow': true,\n              invisible: !isVisible,\n              visible: isVisible,\n            })}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              buttons__button: true,\n              'buttons__button--red': true,\n              invisible: !isVisible,\n              visible: isVisible,\n            })}\n            onClick={this.resetList}\n          >\n            Reset\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              buttons__button: true,\n              'buttons__button--magenta': true,\n              invisible: !isVisible,\n              visible: isVisible,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n        </div>\n\n        <GoodList\n          goods={this.state.goods}\n          visibility={isVisible}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}